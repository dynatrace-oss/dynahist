plugins {
    id 'java-library'
    id 'jacoco'
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'com.github.sherter.google-java-format' version '0.9'
    id 'me.champeau.gradle.jmh' version '0.5.3'
    id "org.sonarqube" version "3.2.0"
}

repositories {
    mavenCentral()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

dependencies {
    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.19.0'
    jmh group: 'org.hdrhistogram', name: 'HdrHistogram', version: '2.1.12'
    jmh group: 'com.datadoghq', name: 'sketches-java', version: '0.7.0'
    jmh group: 'org.openjdk.jol', name: 'jol-core', version: '0.16'
}

license {
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
    header = rootProject.file('docs/licenses/HEADER.txt')
    strictCheck = true
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.name = 'Dynatrace LLC'
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

jmh {
    timeUnit = 'ms'
}

/*
jmh {
    timeout = '10s'
    fork = 1
    timeUnit = 'ms'
    failOnError = false
    timeOnIteration = '1s'
    warmupForks = 1
    warmupIterations = 10
    warmupBatchSize = 1
    warmup = '1s'
    iterations = 30
}
*/

task copyBenchmarkReport(type: Copy) {
    rename ('results.txt', 'recording-speed.txt')
    from file('build/reports/jmh/results.txt')
    into file('charts')
}

sourceSets {
    jmh
    main
    test
}

sonarqube {
    properties {
        property "sonar.projectKey", "dynatrace-oss_dynahist"
        property "sonar.organization", "dynatrace-oss"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

task spaceConsumptionBenchmark(type: JavaExec) {
    group = "Benchmark"
    description = "Runs the space consumption benchmark"
    classpath = sourceSets.jmh.runtimeClasspath
    main = "com.dynatrace.dynahist.SpaceConsumptionBenchmark"
}

task recordingSpeedBenchmark {
    group = "Benchmark"
    description = "Runs the recording speed benchmark"
    dependsOn "jmh"
}

tasks.test.finalizedBy jacocoTestReport
tasks.jmh.finalizedBy copyBenchmarkReport
